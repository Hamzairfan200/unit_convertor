# Unit Converter Code

# Length Conversion
def convert_length(value, from_unit, to_unit):
    length_units = {
        'meters': 1,
        'kilometers': 0.001,
        'centimeters': 100,
        'millimeters': 1000,
        'miles': 0.000621371,
        'yards': 1.09361,
        'feet': 3.28084,
    }
    if from_unit not in length_units or to_unit not in length_units:
        return "Invalid length unit"

    value_in_meters = value * length_units[from_unit]  # Convert input to meters
    return value_in_meters / length_units[to_unit]  # Convert from meters to target unit

# Mass Conversion
def convert_mass(value, from_unit, to_unit):
    mass_units = {
        'grams': 1,
        'kilograms': 0.001,
        'milligrams': 1000,
        'pounds': 0.00220462,
        'ounces': 0.035274,
    }
    if from_unit not in mass_units or to_unit not in mass_units:
        return "Invalid mass unit"

    value_in_grams = value * mass_units[from_unit]  # Convert input to grams
    return value_in_grams / mass_units[to_unit]  # Convert from grams to target unit

# Temperature Conversion
def convert_temperature(value, from_unit, to_unit):
    if from_unit == 'celsius':
        if to_unit == 'fahrenheit':
            return (value * 9/5) + 32
        elif to_unit == 'kelvin':
            return value + 273.15
        else:
            return "Invalid temperature unit"
    elif from_unit == 'fahrenheit':
        if to_unit == 'celsius':
            return (value - 32) * 5/9
        elif to_unit == 'kelvin':
            return (value - 32) * 5/9 + 273.15
        else:
            return "Invalid temperature unit"
    elif from_unit == 'kelvin':
        if to_unit == 'celsius':
            return value - 273.15
        elif to_unit == 'fahrenheit':
            return (value - 273.15) * 9/5 + 32
        else:
            return "Invalid temperature unit"
    else:
        return "Invalid temperature unit"

# Volume Conversion
def convert_volume(value, from_unit, to_unit):
    volume_units = {
        'liters': 1,
        'milliliters': 1000,
        'cubic_meters': 0.001,
        'gallons': 0.264172,
        'quarts': 1.05669,
        'pints': 2.11338,
        'cups': 4.22675,
    }
    if from_unit not in volume_units or to_unit not in volume_units:
        return "Invalid volume unit"

    value_in_liters = value * volume_units[from_unit]  # Convert input to liters
    return value_in_liters / volume_units[to_unit]  # Convert from liters to target unit

# Main function to select category and convert
def unit_converter(value, from_unit, to_unit, category):
    if category == 'length':
        return convert_length(value, from_unit, to_unit)
    elif category == 'mass':
        return convert_mass(value, from_unit, to_unit)
    elif category == 'temperature':
        return convert_temperature(value, from_unit, to_unit)
    elif category == 'volume':
        return convert_volume(value, from_unit, to_unit)
    else:
        return "Invalid category"

# Take inputs from the user
print("Welcome to the Unit Converter!")

# Ask user to input values
category = input("Enter the category (length, mass, temperature, volume): ").lower()
value = float(input("Enter the value you want to convert: "))
from_unit = input("Enter the unit you want to convert from: ").lower()
to_unit = input("Enter the unit you want to convert to: ").lower()

# Perform conversion and display result
result = unit_converter(value, from_unit, to_unit, category)
print(f"{value} {from_unit} is equal to {result} {to_unit}")
